[package]
name = "jidhom"
version = { workspace = true }
authors = ["zefr0x"]
edition = "2024"
license = "AGPL-3.0-only"
homepage = "https://github.com/zefr0x/jidhom"
repository = "https://github.com/zefr0x/jidhom.git"

[package.metadata.leptos]
style-file = "style/main.scss"
assets-dir = "assets"
# TODO: Figure out end-to-end testing (use playwright or something else?)
bin-features = ["ssr"]
bin-default-features = false
lib-features = ["hydrate"]
lib-default-features = false
lib-profile-release = "wasm-release"
watch-additional-files = ["locales"]

[workspace]
members = ["migration", "src/db"]

[workspace.package]
version = "0.1.0-alpha.0"
edition = "2024"

# TODO: Consider commented lints when they are stable.
[workspace.lints.rust]
absolute_paths_not_starting_with_crate = "deny"
ambiguous_negative_literals = "warn"
closure_returning_async_block = "warn"
deref_into_dyn_supertrait = "warn"
explicit_outlives_requirements = "warn"
# fuzzy_provenance_casts = "warn"
let_underscore_drop = "warn"
# lossy_provenance_casts = "warn"
macro_use_extern_crate = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
# multiple_supertrait_upcastable = "warn"
# must_not_suspend = "warn"
non_ascii_idents = "forbid"
# non_exhaustive_omitted_patterns = "warn"
redundant_imports = "deny"
redundant_lifetimes = "warn"
# supertrait_item_shadowing_definition = "warn"
# supertrait_item_shadowing_usage = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
# unqualified_local_imports = "warn"
unreachable_pub = "warn"
unsafe_code = "forbid"
unstable_features = "forbid"
unused_extern_crates = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"

# TODO: Consider enabling more pedantic and nursery lints.
[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
alloc_instead_of_core = "warn"
allow_attributes = "deny"
allow_attributes_without_reason = "warn"
arbitrary_source_item_ordering = "warn"
as_pointer_underscore = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
cfg_not_test = "warn"
clone_on_ref_ptr = "deny"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_numeric_fallback = "warn"
deref_by_slicing = "warn"
doc_include_without_cfg = "warn"
empty_drop = "warn"
empty_enum_variants_with_brackets = "deny"
empty_structs_with_brackets = "deny"
error_impl_error = "deny"
exhaustive_enums = "warn"
exhaustive_structs = "warn"
exit = "deny"
field_scoped_visibility_modifiers = "warn"
filetype_is_file = "warn"
float_cmp_const = "deny"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
get_unwrap = "warn"
host_endian_bytes = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
implicit_return = "deny"
indexing_slicing = "warn"
infinite_loop = "warn"
# TODO: Enforce assembly syntax, either `inline_asm_x86_att_syntax` or `inline_asm_x86_intel_syntax`.
let_underscore_must_use = "warn"
let_underscore_untyped = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
map_with_unused_argument_over_ranges = "warn"
mem_forget = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
module_name_repetitions = "warn"
# TODO: enable `multiple_inherent_impl` when it respect generic arguments.
multiple_unsafe_ops_per_block = "deny"
mutex_atomic = "warn"
mutex_integer = "warn"
needless_raw_strings = "warn"
negative_feature_names = "deny"
non_zero_suggestions = "warn"
pattern_type_mismatch = "warn"
precedence_bits = "warn"
print_stderr = "warn"
print_stdout = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "deny"
redundant_feature_names = "deny"
redundant_test_prefix = "deny"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "deny"
return_and_then = "warn"
same_name_method = "warn"
self_named_module_files = "deny"
semicolon_inside_block = "warn"
single_char_lifetime_names = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_dependencies = "deny"
wildcard_enum_match_arm = "warn"

[workspace.dependencies]
log = { version = "0.4", features = ["release_max_level_info"] }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
csr = ["leptos/csr", "dep:console_error_panic_hook", "dep:console_log"]
hydrate = [
	"leptos/hydrate",
	"leptos-fluent/hydrate",
	"dep:wasm-bindgen",
	"dep:console_error_panic_hook",
	"dep:console_log",
]
ssr = [
	"dep:actix-files",
	"dep:actix-web",
	"dep:leptos_actix",
	"dep:anyhow",
	"dep:db",
	"dep:dotenvy",
	"dep:env_logger",
	"leptos/ssr",
	"leptos_meta/ssr",
	"leptos_router/ssr",
	"leptos-fluent/ssr",
	"leptos-fluent/actix",
]

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, default-features = false, features = [
	"compress-zstd",
	"cookies",
	"http2",
	"macros",
	"unicode",
] }
anyhow = { version = "1.0", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
console_log = { version = "0.2", optional = true, features = ["color"] }
db = { path = "./src/db", optional = true }
dotenvy = { version = "0.15.7", optional = true }
env_logger = { version = "0.11.8", optional = true, default-features = false, features = ["auto-color", "regex"] }
http = "1.3.1"
leptos = { version = "0.8.2", features = ["nightly"] }
leptos-fluent = { version = "0.2", features = ["nightly"] }
leptos_actix = { version = "0.8.2", optional = true }
leptos_meta = "0.8.2"
leptos_router = { version = "0.8.2", features = ["nightly"] }
log = { workspace = true }
wasm-bindgen = { version = "0.2.100", optional = true }

[profile.dev]
debug = "none"
lto = "off"

[profile.release]
codegen-units = 1
opt-level = "z"
panic = "abort"
lto = true

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"
